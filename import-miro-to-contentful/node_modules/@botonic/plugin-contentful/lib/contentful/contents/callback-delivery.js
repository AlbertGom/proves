"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTargetCallback = void 0;
const cms = __importStar(require("../../cms"));
const cms_1 = require("../../cms");
const cms_2 = require("../../cms/cms");
const enums_1 = require("../../util/enums");
const delivery_utils_1 = require("../delivery-utils");
function getTargetCallback(target, context) {
    const model = delivery_utils_1.ContentfulEntryUtils.getContentModel(target);
    try {
        switch (model) {
            case cms_1.ContentType.URL: {
                const urlFields = target;
                if (!urlFields.fields.url && context.ignoreFallbackLocale) {
                    return cms.Callback.empty();
                }
                return cms.Callback.ofUrl(urlFields.fields.url || '');
            }
            case cms_1.ContentType.PAYLOAD: {
                const payloadFields = target;
                return cms.Callback.ofPayload(payloadFields.fields.payload);
            }
        }
        if (enums_1.isOfType(model, cms_2.TopContentType)) {
            return new cms.ContentCallback(model, target.sys.id);
        }
        throw new Error('Unexpected type: ' + model);
    }
    catch (e) {
        throw new cms_1.CmsException(`Error delivering button with id '${target.sys.id}'`, e);
    }
}
exports.getTargetCallback = getTargetCallback;
//# sourceMappingURL=callback-delivery.js.map