import * as contentful from 'contentful';
import * as cms from '../../cms';
import { ContentDelivery } from '../content-delivery';
import { ContentWithNameFields } from '../delivery-utils';
import { DeliveryApi } from '../index';
import { CallbackTarget } from './callback-delivery';
export declare class ButtonDelivery extends ContentDelivery {
    static BUTTON_CONTENT_TYPE: string;
    constructor(delivery: DeliveryApi, resumeErrors: boolean);
    button(id: string, context: cms.Context): Promise<cms.Button>;
    fromReferenceSkipErrors(entries: contentful.Entry<any>[], context: cms.Context): Promise<cms.Button[]>;
    private fromReference;
    private fromId;
    fromEntry(buttonEntry: contentful.Entry<ButtonFields>, context: cms.Context): cms.Button;
    private fromContentReference;
    private static callbackFromEntry;
}
export interface ButtonFields extends ContentWithNameFields {
    text?: string;
    target?: CallbackTarget;
}
