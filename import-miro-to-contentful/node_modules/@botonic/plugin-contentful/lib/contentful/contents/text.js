"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextDelivery = void 0;
const cms = __importStar(require("../../cms"));
const delivery_utils_1 = require("../delivery-utils");
const follow_up_1 = require("./follow-up");
class TextDelivery extends follow_up_1.DeliveryWithFollowUp {
    constructor(delivery, button, resumeErrors) {
        super(cms.ContentType.TEXT, delivery, resumeErrors);
        this.delivery = delivery;
        this.button = button;
    }
    text(id, context) {
        return __awaiter(this, void 0, void 0, function* () {
            // we only get the 1 level of included references...
            const entry = yield this.getEntry(id, context);
            // .. so we need to fetch the buttons
            return this.fromEntry(entry, context);
        });
    }
    fromEntry(entry, context) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const fields = entry.fields;
            const buttonEntries = fields.buttons || [];
            const followup = this.getFollowUp().fromEntry(fields.followup, context);
            const promises = [
                followup,
                this.button.fromReferenceSkipErrors(buttonEntries, context),
            ];
            const followUpAndButtons = yield Promise.all(promises);
            const followUp = followUpAndButtons[0];
            const buttons = followUpAndButtons[1];
            const common = delivery_utils_1.ContentfulEntryUtils.commonFieldsFromEntry(entry, followUp);
            const buttonsStyle = this.getButtonsStyle(fields.buttonsStyle);
            return delivery_utils_1.addCustomFields(new cms.Text(common, (_a = fields.text) !== null && _a !== void 0 ? _a : '', buttons, buttonsStyle), fields);
        });
    }
    getButtonsStyle(buttonsStyle) {
        if (buttonsStyle == 'QuickReplies')
            return cms.ButtonStyle.QUICK_REPLY;
        if (buttonsStyle == 'Buttons')
            return cms.ButtonStyle.BUTTON;
        return undefined;
    }
}
exports.TextDelivery = TextDelivery;
//# sourceMappingURL=text.js.map