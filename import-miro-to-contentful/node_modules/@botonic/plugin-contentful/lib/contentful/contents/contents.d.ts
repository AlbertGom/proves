import * as contentful from 'contentful';
import { CommonFields, Content, ContentType, Context, PagingOptions, TopContent, TopContentType } from '../../cms';
import { ResourceDelivery } from '../content-delivery';
/**
 * Retrieve multiple contents in a single call
 */
export declare class ContentsDelivery extends ResourceDelivery {
    contents<T extends Content>(contentType: ContentType, context: Context, factory: (entry: contentful.Entry<any>, ctxt: Context) => Promise<T>, paging: PagingOptions): Promise<T[]>;
    topContents<T extends TopContent>(model: TopContentType, context: Context, factory: (entry: contentful.Entry<any>, ctxt: Context) => Promise<T>, filter: ((cf: CommonFields) => boolean) | undefined, paging: PagingOptions): Promise<T[]>;
    private maxReferencesInclude;
    private query;
}
