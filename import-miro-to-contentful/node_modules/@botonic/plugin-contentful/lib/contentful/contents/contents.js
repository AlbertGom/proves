"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentsDelivery = void 0;
const content_delivery_1 = require("../content-delivery");
const delivery_utils_1 = require("../delivery-utils");
const handoff_1 = require("./handoff");
const queue_1 = require("./queue");
const schedule_1 = require("./schedule");
/**
 * Retrieve multiple contents in a single call
 */
class ContentsDelivery extends content_delivery_1.ResourceDelivery {
    contents(contentType, context, factory, paging) {
        return __awaiter(this, void 0, void 0, function* () {
            const entryCollection = yield this.delivery.getEntries(context, this.query(contentType, paging));
            return this.asyncMap(context, entryCollection.items, entry => factory(entry, context));
        });
    }
    topContents(model, context, factory, filter, paging) {
        return __awaiter(this, void 0, void 0, function* () {
            const entryCollection = yield this.delivery.getEntries(context, this.query(model, paging));
            let entries = entryCollection.items;
            if (filter) {
                entries = entries.filter(entry => filter(delivery_utils_1.ContentfulEntryUtils.commonFieldsFromEntry(entry)));
            }
            return this.asyncMap(context, entries, entry => factory(entry, context));
        });
    }
    maxReferencesInclude() {
        return Math.max(handoff_1.HandoffDelivery.REFERENCES_INCLUDE, queue_1.QueueDelivery.REFERENCES_INCLUDE, schedule_1.ScheduleDelivery.REFERENCES_INCLUDE);
    }
    query(contentType, paging) {
        return {
            // eslint-disable-next-line @typescript-eslint/naming-convention
            content_type: contentType,
            include: this.maxReferencesInclude(),
            limit: paging.limit,
            skip: paging.skip,
        };
    }
}
exports.ContentsDelivery = ContentsDelivery;
//# sourceMappingURL=contents.js.map