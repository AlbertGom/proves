import { SpaceExport } from './space-export';
/**
 * Useful to clone the contents flow from a space when the target locales are different.
 */
export declare class LocaleMigrator {
    readonly fromLoc: string;
    readonly toLoc: string;
    readonly verbose: boolean;
    defaultLoc: string | undefined;
    /**
     * @param fromLoc The locale whose flow we want to maintain
     * @param toLoc The locale in which `fromLoc`'s flow will be converted
     */
    constructor(fromLoc: string, toLoc: string, verbose?: boolean);
    private getDefaultLocale;
    migrate(spaceExport: SpaceExport): void;
    private migrateEntries;
    private migrateAssets;
    private migrateField;
    private migrateLocales;
}
export declare class LocaleRemover {
    readonly removeLocs: string[];
    readonly newDefault?: string | undefined;
    /**
     * @param removeLocs The locales to completely remove
     */
    constructor(removeLocs: string[], newDefault?: string | undefined);
    remove(spaceExport: SpaceExport): void;
    private removeEntries;
    private removeAssets;
    private removeField;
    private removeLocales;
}
