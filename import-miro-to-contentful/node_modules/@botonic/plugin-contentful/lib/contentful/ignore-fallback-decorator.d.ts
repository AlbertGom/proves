import * as contentful from 'contentful';
import { Asset, ContentType, Entry, EntryCollection } from 'contentful';
import { Context } from '../cms';
import { DeliveryApi } from './delivery-api';
/**
 * It requests contentful to deliver all locales for each entry, and we discard all except the one in the context
 */
export declare class IgnoreFallbackDecorator implements DeliveryApi {
    private readonly api;
    constructor(api: DeliveryApi);
    getEntries<T>(context: Context, query?: any): Promise<EntryCollection<T>>;
    getEntry<T>(id: string, context: Context, query?: any): Promise<Entry<T>>;
    traverseEntries<T>(context: Context, entries: Entry<T>[]): Promise<Entry<T>[]>;
    getAsset(id: string, context: Context, query?: any): Promise<Asset>;
    getAssets(context: Context, query?: any): Promise<contentful.AssetCollection>;
    getContentType(id: string): Promise<ContentType>;
    private i18nContext;
}
