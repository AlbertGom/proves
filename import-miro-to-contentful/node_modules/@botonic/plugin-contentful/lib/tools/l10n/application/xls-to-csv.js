"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = __importStar(require("fs"));
const path_1 = require("path");
const xlsx_1 = require("xlsx");
const nlp_1 = require("../../../nlp");
if (process.argv.length < 4 || process.argv[2] == '--help') {
    console.warn(`Usage: xlsName locale [targetPath]`);
    // eslint-disable-next-line no-process-exit
    process.exit(1);
}
const xslName = process.argv[2];
const locale = process.argv[3];
const csvPath = process.argv.length > 4 ? process.argv[4] : '.';
function getCsvName(csvPath) {
    if (csvPath.endsWith('.csv')) {
        return csvPath;
    }
    return path_1.join(csvPath, `contentful_${nlp_1.fixLocale(locale)}.csv`);
}
function main() {
    const csvName = getCsvName(csvPath);
    const workBook = xlsx_1.readFile(xslName);
    const sheetName = workBook.SheetNames[0];
    const sheet = workBook.Sheets[sheetName];
    const stream = xlsx_1.stream.to_csv(sheet, { FS: ';' });
    stream.pipe(fs.createWriteStream(csvName));
    console.log(`CSV written to ${csvName}`);
    return csvName;
}
void main();
//# sourceMappingURL=xls-to-csv.js.map