import { OnFinish } from '../contents';
import { CarouselBuilder, DocumentBuilder, ElementBuilder, HandoffBuilder, ImageBuilder, StartUpBuilder, TextBuilder, TopContentBuilder } from '../factories/content-factories';
import { Button, Callback, Element, Text, TopContentId } from '../index';
/**
 * The Builder classes below create Content instances with minimal effort
 * to speedup the implementation of unit tests by setting random values for the
 * non specified fields.
 * They are exported by the plugin so that the can be used in bots' unit tests
 */
export declare function rndStr(): string;
export declare function rndBool(): boolean;
export declare class ContentCallbackBuilder {
    callback: Callback | undefined;
    withContentId(contentId: TopContentId): ContentCallbackBuilder;
    build(): Callback;
}
export declare class RndButtonsBuilder {
    name: string | undefined;
    text: string | undefined;
    buttons: Button[];
    callbackBuilder: ContentCallbackBuilder;
    callback: Callback | undefined;
    build(): Button[];
    withCallback(callback: Callback): this;
    withName(name: string): this;
    withText(text: string): this;
    addButton(): this;
}
export declare class RndTopContentBuilder {
    keywords: never[];
    withRandomFields(builder: TopContentBuilder): void;
}
export declare class RndTextBuilder extends TextBuilder {
    buttonsBuilder: RndButtonsBuilder;
    readonly topComponentBuilder: RndTopContentBuilder;
    constructor(name?: string, text?: string);
    /** @deprecated use buttonsBuilder */
    withButtonsBuilder(): RndButtonsBuilder;
    build(): Text;
    withRandomFields(): this;
}
export declare class RndElementBuilder extends ElementBuilder {
    private buttonsBuilder;
    constructor();
    withButtonsBuilder(): RndButtonsBuilder;
    withButtons(buttons: Button[]): this;
    withRandomFields(): this;
    build(): Element;
}
export declare class RndCarouselBuilder extends CarouselBuilder {
    readonly topComponentBuilder: RndTopContentBuilder;
    readonly elementBuilder: RndElementBuilder;
    constructor(name?: string);
    withRandomFields(numElements?: number): this;
}
export declare class RndStartUpBuilder extends StartUpBuilder {
    readonly topComponentBuilder: RndTopContentBuilder;
    readonly buttonsBuilder: RndButtonsBuilder;
    constructor(name?: string, text?: string);
    withRandomFields(): this;
}
export declare class RndImageBuilder extends ImageBuilder {
    readonly topComponentBuilder: RndTopContentBuilder;
    constructor(name?: string, imgUrl?: string);
    withRandomFields(): this;
}
export declare class RndDocumentBuilder extends DocumentBuilder {
    readonly topComponentBuilder: RndTopContentBuilder;
    constructor(name?: string, docUrl?: string);
    withRandomFields(): this;
}
export declare class RndHandoffBuilder extends HandoffBuilder {
    readonly topComponentBuilder: RndTopContentBuilder;
    constructor(name?: string, onFinish?: OnFinish);
    withRandomFields(): this;
}
