import { ContentfulOptions } from '../plugin';
import { SearchCandidate } from '../search';
import { CMS, ContentType, PagingOptions, TopContentType } from './cms';
import { Asset, Button, Carousel, Chitchat, CommonFields, Content, Custom, DateRangeContent, Document, Element, Handoff, Image, Payload, Queue, ScheduleContent, StartUp, Text, TopContent, Url } from './contents';
import { Context } from './context';
export declare class LogCMS implements CMS {
    readonly cms: CMS;
    private readonly logger;
    constructor(cms: CMS, options: ContentfulOptions, logger?: (doing: string) => void);
    carousel(id: string, context?: Context): Promise<Carousel>;
    document(id: string, context?: Context): Promise<Document>;
    text(id: string, context?: Context): Promise<Text>;
    chitchat(id: string, context?: Context): Promise<Chitchat>;
    startUp(id: string, context?: Context): Promise<StartUp>;
    url(id: string, context?: Context): Promise<Url>;
    payload(id: string, context?: Context): Promise<Payload>;
    image(id: string, context?: Context): Promise<Image>;
    queue(id: string, context?: Context): Promise<Queue>;
    button(id: string, context?: Context): Promise<Button>;
    element(id: string, context?: Context): Promise<Element>;
    handoff(id: string, context?: Context): Promise<Handoff>;
    custom(id: string, context?: Context): Promise<Custom>;
    content(id: string, context?: Context): Promise<Content>;
    contentsWithKeywords(context?: Context, paging?: PagingOptions): Promise<SearchCandidate[]>;
    topContents<T extends TopContent>(model: TopContentType, context?: Context, filter?: (cf: CommonFields) => boolean, paging?: PagingOptions): Promise<T[]>;
    contents<T extends Content>(contentType: ContentType, context?: Context, paging?: PagingOptions): Promise<T[]>;
    assets(context?: Context): Promise<Asset[]>;
    schedule(id: string, context?: Context): Promise<ScheduleContent>;
    dateRange(id: string, context?: Context): Promise<DateRangeContent>;
    asset(id: string, context?: Context): Promise<Asset>;
    private logContentDelivery;
}
